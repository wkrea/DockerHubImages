# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops
parameters:
  steps: {}

jobs:
  - ${{ each step in parameters.steps }}: # Each job
      - job: ${{ step.job }} # Copy the job properties
        displayName: ${{ step.name }}
        steps:
          - script: echo $(vmImage)-> building ${{ step.name }}
          - task: Docker@2
            displayName: Login to DockerHub
            inputs:
              command: login
              containerRegistry: ${{ step.serviceDockerHub }}
          - task: Docker@2
            displayName: Build and Push
            inputs:
              command: buildAndPush
              repository: ${{ step.repository }} #wallaskrea/alpinemini #
              buildContext: ${{ step.buildContext }} #$(Build.SourcesDirectory)/Alpine #
              Dockerfile: ${{ step.dockerfile }} # $(Build.SourcesDirectory)/Alpine/Dockerfile.alpinemini
              tags: |
                $(tags)
          - task: Docker@2
            displayName: Logout of DockerHub
            inputs:
              containerRegistry: ${{ step.serviceDockerHub }}
              command: "logout"
          # - template: azure_templates/buildDockerHubImages.yml # Template build&push dockerhub
          #   param:
          #     serviceDockerHub: ${{ variables.SERVICENAME_DOCKERHUB }}
          #     repository: ${{ variables.DOCKERHUB_ACCOUNT }}/${{ job.ImageName }} #wallaskrea/alpinemini #
          #     dockerfile: ${{ job.dockerfile }}
          #     buildContext: ${{ job.buildContext }} #$(ALPINE_CONTEXT)
          #     tags: ${{ job.tags }}
          # - script: echo $(vmImage) -> finish ${{ job.name }}
        # - ${{ each vmImage in ${{ variables.vmImages }} }}: # Each job
        #   pool:
        #     vmImage: $(vmImage)
        #   steps:
        #     - script: echo $(vmImage)-> building ${{ job.name }}
        #     - template: azure_templates/buildDockerHubImages.yml # Template build&push dockerhub
        #       param:
        #         serviceDockerHub: ${{ variables.SERVICENAME_DOCKERHUB }}
        #         repository: ${{ variables.DOCKERHUB_ACCOUNT }}/${{ job.ImageName }} #wallaskrea/alpinemini #
        #         dockerfile: ${{ job.dockerfile }}
        #         buildContext: ${{ job.buildContext }} #$(ALPINE_CONTEXT)
        #         tags: ${{ job.tags }}
        #     - script: echo $(vmImage) -> finish ${{ job.name }}
