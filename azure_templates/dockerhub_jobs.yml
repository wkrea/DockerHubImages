# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops

variables:
  vmImages:
    - "win1803"
    - 'ubuntu-16.04'
    - 'vs2017-win2016'
    - 'macOS-10.13'
  SERVICENAME_DOCKERHUB: "wallaskreaDockerHub"
  DOCKERHUB_ACCOUNT: wallaskrea
  ALPINE_CONTEXT: ""
  tag: "$(Build.BuildId)"
  TIMEOUT: 30
  CANCELTIMEOUT: 1 

parameters:
  jobs: { job }

jobs:
  - ${{ each job in parameters.tareas }}: # Each job
      - job: ${{ job.job }} # Copy the job properties
        displayName: ${{ job.name }}
        condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
        - ${{ if job.dependsOn }}:
          - ${{ job.dependsOn }}
        workspace:
          clean: all # outputs | resources | all what to clean up before the job runs container: "" # container to run this job inside
        timeoutInMinutes: $(TIMEOUT) # how long to run the job before automatically cancelling
        cancelTimeoutInMinutes: $(CANCELTIMEOUT) # how much time to give 'run always even if cancelled tasks' before killing them

        - ${{ each vmImage in variables.vmImages }}: # Each job
          pool:
            vmImage: $(vmImage)
          steps:
            - script: echo $(vmImage) -> building ${{ job.name }}
            - template: azure_templates/buildDockerHubImages.yml # Template build&push dockerhub
              param:
                serviceDockerHub: $(SERVICENAME_DOCKERHUB)
                repository: $(DOCKERHUB_ACCOUNT)/${{ job.ImageName }}
                dockerfile: ${{ job.dockerfile }}
                buildContext: ${{ job.buildContext }} #$(ALPINE_CONTEXT)
                tags: ${{ job.tags }}
            - script: echo $(vmImage) -> finish ${{ job.name }}